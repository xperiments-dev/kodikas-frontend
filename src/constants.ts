export const response = {
  success: true,
  changed_file:
    'import re\\n\\n\\ndef func(a: int, b: int) -> int:\\n    return a + b\\n\\n\\ndef hello() -> str:\\n    return "hello world"\\n\\n\\ndef special_characters_in_string() -> bool:\\n    string = "boooo"\\n    regex_pattern = re.compile("[@_!#$%^&\'*()<>?/\\\\|}"{~:=]")\\n\\n    if regex_pattern.search(string):\\n        return True\\n    return False\\n\\n\\n# ------------------\\n\\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\\nfrom time import time\\nfrom typing import Any, List\\n\\n\\nstart = time()\\n\\n\\ndef boo(hello: List[Any]=[]) -> bool:\\n    with ThreadPoolExecutor() as executor:\\n        futures = []\\n        futures.append(executor.submit(special_characters_in_string))\\n        futures.append(executor.submit(special_characters_in_string))\\n        for future in as_completed(futures):\\n            print(future.result())\\n    return special_characters_in_string()\\n',
  original_file:
    'import re\\n\\n\\ndef func(a, b):\\n    return a + b\\n\\n\\ndef hello():\\n    return "hello world"\\n\\n\\ndef special_characters_in_string():\\n    string = "boooo"\\n    regex_pattern = re.compile("[@_!#$%^&\'*()<>?/\\\\|}"{~:=]")\\n\\n    if regex_pattern.search(string):\\n        return True\\n    return False\\n\\n\\n# ------------------\\n\\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\\nfrom time import time\\n\\n\\nstart = time()\\n\\n\\ndef boo(hello=[]):\\n    with ThreadPoolExecutor() as executor:\\n        futures = []\\n        futures.append(executor.submit(special_characters_in_string))\\n        futures.append(executor.submit(special_characters_in_string))\\n        for future in as_completed(futures):\\n            print(future.result())\\n    return special_characters_in_string()\\n',
  file_path: 'src/script.py',
};
